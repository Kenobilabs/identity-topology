run.location = local
source.type = rabbit

#source RabbitMq points
rabbitmq.shard.count=2

rabbitmq.queueName0=Naren_Byte
rabbitmq.host0=localhost
rabbitmq.port0=5672
rabbitmq.username0=guest
rabbitmq.password0=guest
rabbitmq.prefetchCount0=100
rabbitmq.ha.hosts0=localhost
rabbitmq.requeueOnFail0=true
rabbitmq.virtualhost0=/


rabbitmq.queueName1=Naren_Byte1
rabbitmq.host1=localhost
rabbitmq.port1=5672
rabbitmq.username1=guest
rabbitmq.password1=guest
rabbitmq.prefetchCount1=100
rabbitmq.ha.hosts1=
rabbitmq.requeueOnFail1=true
rabbitmq.virtualhost1=/
 

#destination
destinationKafkaURL=localhost:9092,localhost:9091
outputTopic = destination-byte

#not used sourceKafkaURL, destination ZooKeeperURL only for testing 
destinationZooKeeperURL=localhost:2181
sourceKafkaURL=localhost:9092

#encoding  kafka.serializer.DefaultEncoder for bytes and kafka.serializer.StringEncoder for String 
serializerEncodingValue = kafka.serializer.DefaultEncoder
# Field Name , bytes for bytes , str for StringSchema
partitionFieldName = bytes

# raw for RawScheme (bytes) , string for StringScheme
schemeType = raw

#Mostly static values # keep topologyName and StreamName unique everytime.
topologyName = IDENTITY_GA_VERSION1
streamName = IDENTITY_GA_VERSION1
requiredAcks = -1
spoutParallelCount=1
boltParallelCount=1
metricsParallelCount=1
topology.workers=1
topology.spout.max.batch.size=20
topology.message.timeout.secs=30
topology.max.spout.pending=1
message.send.max.retries=0